===========================
How to Use 0-add_integer.py
===========================

This module defines an integer addition function ``add_integer(a, b=98)``.

USAGE
-----

``add_integer()`` returns the sum of its arguments.  For numbers,
that value is equivalent to using the ``+`` operator.
::

	>>> add_integer = __import__('0-add_integer').add_integer
	>>> add_integer(2, 3)
	5

It also works with floating-point values.

::

	>>> add_integer(2.0, 3)
	5

We cast floats to intergers before addition is performed.

::

	>>> add_integer(-4, -7)
	-11

::

	>>> add_integer(-100.2, 2.3)
	-98

::

	>>> add_integer(2)
	100

NON NUMBERS
-----------

::

	>>> add_integer(2.0, "Hello")
	Traceback (most recent call last):
	TypeError: b must be an integer

::

	>>> add_integer("Hello", 3)
	Traceback (most recent call last):
	TypeError: a must be an integer

The function will fail if infinity is provided.

::

    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

The function will fail with a NaN number.

::

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer
